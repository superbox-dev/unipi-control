[build-system]
requires = ["setuptools >= 65", "setuptools-scm >= 7"]
build-backend = "setuptools.build_meta"

[project]
name = "unipi-control"
description = "Control Unipi I/O directly with MQTT commands."
readme = "README.md"
authors = [
    { name = "Michael Hacker", email = "mh@superbox.one" },
]
maintainers = [
    { name = "Michael Hacker", email = "mh@superbox.one" },
]
license = {text = "Apache-2.0 license"}
keywords = ["mqtt", "modbus", "unipi"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Operating System :: POSIX :: Linux",
    "Topic :: System :: Networking",
    "Topic :: Utilities",
]
requires-python = ">= 3.8"
dependencies = [
    "aiomqtt==1.2.1",
    "pymodbus[serial]==3.5.4",
    "pyyaml==6.0.1"
]
dynamic = ["version"]

[project.scripts]
unipi-control = "unipi_control.unipi_control:main"
unipi-config-backup = "unipi_control.tools.config_backup:main"
unipi-config-converter = "unipi_control.tools.config_converter:main"
unipi-model-info = "unipi_control.tools.model_info:main"

[project.urls]
"Source code" = "https://github.com/superbox-dev/unipi-control"
"Issue tracker" = "https://github.com/superbox-dev/unipi-control/issues"

[project.optional-dependencies]
build = [
    "setuptools>=65.5.1",
    "build==1.0.3",
]
audit = [
    "pip-audit==2.6.1",
]
format = [
    "black==23.11.0",
]
lint = [
    "mypy==1.7.0",
    "ruff==0.1.6",
    "types-PyYAML==6.0.12.12",
    "yamllint==1.33.0",
]
tests = [
    "coverage==7.3.2",
    "coverage-badge==1.1.0",
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
    "pytest-mock==3.12.0",
    "pytest-xdist[psutil]==3.5.0",
]

[tool.setuptools]
packages = ["unipi_control"]

[tool.setuptools_scm]
write_to = "unipi_control/version.py"

[tool.black]
line-length = 120
target-version = ["py38", "py39", "py310", "py311", "py312"]

[tool.mypy]
strict = true
python_version = "3.8"
ignore_missing_imports = true
disallow_any_generics = false # python 3.8 compatibility
junit_xml = "reports/mypy.xml"

[tool.ruff]
target-version = "py38"
line-length = 120
select = ["ALL"]
ignore = [
    "ANN101",  # missing-type-self
    "ANN002",  # missing-type-args
    "ANN003",  # missing-type-kwargs
    "COM",     # trailing-comma
    "D101",    # undocumented-public-class
    "D104",    # undocumented-public-package
    "D105",    # undocumented-magic-method
    "D107",    # undocumented-public-init
    "D203",    # one-blank-line-before-class
    "D213",    # multi-line-summary-second-line
    "ERA001",  # commented-out-code
    "FA100",   # missing-future-annotations-import
    "FBT",     # boolean-trap
    "S101",    # assert-used
    "S108",    # hardcoded-temp-file
    "T201",    # print
    "PERF203", # try-except-in-loop
    "PLR0913", # too-many-arguments
    "PLR2004", # magic-value-comparison
    "I001",    # unsorted-imports
    "UP006",   # non-pep585-annotation (python 3.8 compatibility)
    "UP007",   # non-pep604-annotation (python 3.8 compatibility)
    "UP035",   # deprecated-import (python 3.8 compatibility)
    "UP038",   # non-pep604-isinstance (python 3.8 compatibility)
]

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(levelname)-8s | %(asctime)s: %(message)s"
# https://docs.pytest.org/en/latest/reference/reference.html#ini-options-ref
addopts = "--color=yes --exitfirst --failed-first --strict-config --strict-markers --junitxml=reports/pytest.xml"

[tool.coverage.run] # https://coverage.readthedocs.io/en/latest/config.html#run
branch = false

[tool.coverage.report] # https://coverage.readthedocs.io/en/latest/config.html#report
fail_under = 95
show_missing = true
skip_covered = true
exclude_also = [
    "if TYPE_CHECKING:",
    "@(abc\\.)?abstractmethod",
]
